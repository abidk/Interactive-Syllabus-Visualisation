  


[{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"Object Oriented Programming with Java 2","CODE":"COMP10092","SEMESTER":"SEM2","CREDITS":"20","PREREQ1":"COMP10580","COREQ1":"COMP10081","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS1092\/index.html","AIMS":"Building on COMP10081, this course unit continues the theme of Object Oriented Design and Programming.  The remaining core features of the language will be covered and some library packages will be introduced.  Design principles for human-computer interfaces will also be taught.\r\n\r\nProgram design will be addressed by the use of a number of case studies in which larger programs will be developed from informal requirements expressed in English and this development will include the process identifying objects, classes and methods.\r\n\r\nA practical introduction to team-working will be achieved through the mini-project that runs throughout the course unit."},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"Object Oriented Programming with Java 1","CODE":"COMP10081","SEMESTER":"SEM1","CREDITS":"20","PREREQ1":"none","COREQ1":"none","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS1081\/","AIMS":"This course unit provides the first exposure to programming in the School's degree programmes and, for many students, their first encounter with programming at all. Its main aim, therefore, is to introduce the principles of design and programming, using objects as a basis. This course unit will use Java and provide an `Objects-Soon' introduction to the Object-Oriented paradigm. Together with COMP10092, the emphasis is on acquiring best practice incrementally from the bottom-up, including use of modern development and documentation tools, approaches to testing programs for correctness and evaluating designs against typical non-functional characteristics, such as efficiency, maintainability and readability."},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"A Computational Model","CODE":"COMP10031","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"none","COREQ1":"COMP10081","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS1031","AIMS":"COMP10031 aims to introduce computer instruction sets and the binary representation of information, by exploring the relationship between high-level language programs and the basic structure and operation of digital computers, including the process that implements this relationship. Java and the ARM processor are used as exemplars. Practical experience is gained in the laboratory through exercises which progressively expose features of the ARM instruction set. The course-unit aims to serve as an essential foundation for further studies in the single honours Computer Science degree programme."},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"Mathematical Techniques for Computer Science","CODE":"COMP10020","SEMESTER":"BOTH","CREDITS":"20","PREREQ1":"none","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~graham\/COMP10020\/","AIMS":"This full-year course unit focuses on the use of mathematics as a tool to model and analyse real-world problems arising in computer science. Four principal topics, drawn from the traditional areas of discrete mathematics as well as some continuous mathematics, will be introduced: symbolic logic, probability, discrete structures, and vectors and matrices. Each topic will be motivated by experts introducing relevant real-world problems arising in their own specialism.\r\n\r\nAbstraction is fundamental to computer science. Hence, a fundamental emphasis of this course unit is to introduce mathematical techniques and skills to enable the student to design and manipulate tractable and innovative abstract models of chunks of the real-world. These techniques and skills include appropriate mathematical notations and concepts. These range over the four principal areas mentioned above. Formalisation in mathematics has, in general, significant cost. Therefore, to be of practical use, the benefits arising from formalisation, such as succinctness, unambiguity, provability, transformability and mechanisability, must outweigh the costs. A key aim of the course is for the student to appreciate this issue and know how and when to use particular techniques.\r\n\r\nThe specific aims of the course unit are:\r\n\r\n*To demonstrate the relevance of mathematics to computer science.\r\n*To introduce fundamental mathematical techniques of abstraction.\r\n*To demonstrate applicability of particular mathematical techniques and skills for particular types of computer science problem.\r\n*To appreciate the costs and benefits of mathematical modelling.\r\n\r\nThe delivery style will place more emphasis on students undertaking appropriate background reading, i.e. being more independent learners, and use the lectures more to demonstrate examples and solutions and not working through every detail of a particular or concept.\r\n\r\nThe course unit is delivered by staff from both the School of Computer Science and the School of Mathematics . "},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"First Year Team Project","CODE":"COMP10900","SEMESTER":"BOTH","CREDITS":"20","PREREQ1":"none","COREQ1":"COMP10081 or COMP10580 or COMP17010","WEBSITE":"http:\/\/moodle.cs.man.ac.uk\/course\/view.php?id=49","AIMS":"The main aim of this course-unit is to develop various non-technical skills, within a context that students will find relevant and engaging: a project to create a web-based application. These skills will help students to succeed both during their time at University and, more importantly, in their future working life.\r\n\r\nAlthough there are lectures, they do not directly cover topics such as how to build a web-based application. Instead, students are encouraged to assess their own knowledge and decide what extra information they need and how they will obtain it (Inquiry Based Learning).\r\n\r\nThe various events and deliverables within the project are chosen to widen the student's range of experiences and capabilities - for example, group working, self- and peer- learning, setting goals and managing progress towards them, innovation and design - whilst being carefully phased and managed so that students can cope with each new step. In particular, each group of 5 or 6 students has a tutor\/facilitator who they meet each week, and who carefully guides them at the beginning, but gives them as much freedom and control as they need later on, tailoring the course-unit to individual needs.\r\n"},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"Reasoning about Programs","CODE":"COMP10112","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10020","COREQ1":"an imperative language e.g. COMP10081","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/COMP10112\/","AIMS":"The aim of this module is to introduce students to the principles and practice of reasoning about simple imperative programs. The principles will be based on first-order logic, and the practice will be provided by the imperative language SPARK and its tools"},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"0","MAX_CREDITS":"110","MIN_CREDITS":"110","TITLE":"Artificial Intelligence Fundamentals","CODE":"COMP10412","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10081","COREQ1":"COMP10020","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/COMP10412","AIMS":"The course introduces the study of Artificial Intelligence (AI) for students in all course streams. It is designed to stand alone as an introduction to AI, but also to provide a background for more advanced study. The course presents AI from a probabilistic viewpoint, and is centred around two specific problems: (i) robot localization; (ii) speech understanding. The lectures will present the main theoretical ideas needed to tackle these problems; the examples classes will re-inforce these through paper-and-pencil exercises, and the labs will involve the development of programs to solve them. There will be one hour of lectures and one hour of examples classes each week, as well as five two-hour lab sessions over the semester."},{"PROGRAMME_LEVEL":"1","OPTION_POOL_NAME":"1","MAX_CREDITS":"10","MIN_CREDITS":"10","TITLE":"The Underlying Machine","CODE":"COMP10211","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"none","COREQ1":"COMP10031 preferred","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS1211\/","AIMS":"This course introduces digital logic and its application in computer organisation and design. \r\n \r\nThe major emphasis is on practical design work and, in the laboratory, state-of-the-art computer-aided design tools are used to support the design of digital hardware systems. Students' designs are simulated and then implemented using electrically reconfigurable gate arrays. \r\n \r\nThe lectures initially support the laboratories but progress to a wider overview of the design and interaction of computer hardware systems. Ultimately a complete - if simple - computer is described as constructed from simple gates."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Practical and Transferable Skills","CODE":"COMP20910","SEMESTER":"SEM1","CREDITS":"20","PREREQ1":"None","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/Study_subweb\/Ugrad\/courses.php3","AIMS":"This course unit combines practical work in the form of laboratory exercises from other course units, and additionally provides study and transferable skills including raising awareness of the recruitment process, careers, team working, and practice in writing essays and giving presentations."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Software Engineering 1","CODE":"COMP20341","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10092 or COMP10580","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS2341\/","AIMS":"This course unit aims to provide an introduction to the topic of software engineering, covering (almost) the entire software life cycle from early project planning through to verification of the finished product."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Artificial Intelligence Programming","CODE":"COMP20442","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"None","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/COMP20442","AIMS":"The aim of this course is to explain basic techniques of AI programming, with special focus on the Prolog programming language and its application to processing natural language. "},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Logic in Computer Science","CODE":"COMP20142","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10020","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~korovink\/cs2142","AIMS":"This course intends to build an understanding of fundamentals of (mathematical) logic as well as some of the applications of logic in modern computer science, including hardware verification, finite domain constraint satisfaction, and databases."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Subsymbolic Processing and Neural Networks","CODE":"COMP20411","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10020 or equivalent","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~jls\/CS2411\/handouts.html","AIMS":"To introduce methods for extracting rules or learning from data, and provide the necessary mathematical background to enable the student to understand how the methods work and how to get the best performance from them. The course also includes heuristic problem-solving methods such as genetic algorithms. This course is pitched towards any student with a mathematical or scientific background who is interested in adaptive techniques for learning from data."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"0","MAX_CREDITS":"70","MIN_CREDITS":"70","TITLE":"Algorithms and Data Structures","CODE":"COMP20012","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10021, COMP10081, COMP10092","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~graham\/COMP20012","AIMS":"This course is an introduction to the design, analysis and wide variety of algorithms (a topic often called `Algorithmics'). We shall look at the specification of computational tasks, varieties of algorithms for tasks, demonstrating (through informal proof) that algorithms perform given tasks, the structure of algorithms and, finally, measures for comparing the performance of algorithms. We also consider the implementation of algorithms and relevant data and program structures, and principles of program design."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Mobile Systems","CODE":"COMP20252","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"none","COREQ1":"none","WEBSITE":null,"AIMS":"Computing is becoming increasingly mobile. This unit will give insights into the issues of mobile systems, covering mobile communications, real-time signals such as speech, video and music, codecs, and maximising battery life."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Digital Design Techniques","CODE":"COMP20212","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10211 , (COMP10222 recommended)","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS2212\/","AIMS":"Modern computer systems are designed using CMOS logic. This course introduces the design options and implementation techniques available for the design of modern CMOS digital systems. This is achieved by emphasising the top down approach to the development of a digital design."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"VLSI System Design","CODE":"COMP20241","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10211","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/teaching\/electronics\/CS224\/","AIMS":"The course gives an understanding of how integrated circuit technology is used today to implement complex electronic systems as silicon chips. VLSI circuits play an increasingly important role in computer systems; it is therefore of benefit to a wide range of computer scientists to know how this technology can be exploited and to be aware of the many factors involved in the design of a VLSI chip."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"The Implementation and Power of Computer Languages","CODE":"COMP20121","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"A programming language, preferably Java","COREQ1":"none","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS2121","AIMS":"The first part of this course-unit is a practical introduction to the implementation of programming languages. It also gives some insights into the reasons behind some features of programming languages. The second part examines the underlying theory, giving an insight into the theoretical tools used in the first part. Having discussed languages on various levels of expressivity it goes on to show how the models underpinning the structure of languages lead to an understanding of the intrinsic limits of computation."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Software Engineering 2","CODE":"COMP20352","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20341","COREQ1":"None","WEBSITE":null,"AIMS":"We will present a range of approaches to ensuring software quality, starting with informal approaches, which are relatively cheap but give few guarantees, and continuing to highly formal techniques which are expensive but which can provide proofs of correctness."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Fundamentals of Databases","CODE":"COMP20312","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20341 desirable","COREQ1":"none","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS2312\/","AIMS":"The aim of the course is to provide students with an overview of database management system architectures and environments, an understanding of basic database design and implementation techniques, and practical experience of designing and building a relational database."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Computer Networks","CODE":"COMP20081","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10031, COMP10092","COREQ1":"None","WEBSITE":"http:\/\/moodle.cs.man.ac.uk\/course\/view.php?id=50","AIMS":"Computer networks have become an essential tool enabling users to obtain information and to co-operate on applications. This course unit aims to give an understanding of the principles of data communication and computer networks. It will cover the principle of network protocols, structures, standard and services mainly concentrating on wired networks but with a mention of wireless in places."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Computer Graphics","CODE":"COMP20072","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20021 or C programming","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS2072\/","AIMS":"This Course Unit introduces students to the theory and practice of Interactive Computer Graphics. Its principal aim is to teach the fundamental principles of two- and three-dimensional Interactive Computer Graphics. OpenGL is used as the platform for practical C programming exercises, and as an example of a system which incorporates many of the fundamental ideas and algorithms of modern computer graphics."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Operating Systems","CODE":"COMP20051","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10031, COMP10092","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS2051\/","AIMS":"This course unit introduces students to the principles of operating system design and to the prevailing techniques for their implementation. The course unit assumes that students are already familiar with the structure of a user-program after it has been converted into an executable form, and that they have a rudimentary understanding of the performance trade-offs inherent in the choice of algorithms and data structures. Pertinent features of the hardware-software interface are described, and emphasis is placed on the concurrent nature of operating system activities. Two concrete examples of operating systems are used to illustrate how principles and techniques are deployed in practice."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Distributed Computing","CODE":"COMP20032","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10092 (COMP20051 desirable)","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/COMP20032","AIMS":"Many of the most important and visible uses of computer technology rely on distributed computing. This course unit aims to introduce students to the principles, techniques and methods of distributed computing in sufficient breadth and depth for it to act as a foundation for the exploration of specific topics in more advanced course units. The course unit assumes that students have already a solid understanding of the main principles of computing within a single machine, and that they have a rudimentary understanding of the issues related to machine communication and networking."},{"PROGRAMME_LEVEL":"2","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"50","TITLE":"Imperative Programming with C and C++","CODE":"COMP20021","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10081 or COMP10580","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS2021\/","AIMS":"This course unit introduces students to the C and C++ programming languages and the tools used to support them."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"0","MAX_CREDITS":"20","MIN_CREDITS":"20","TITLE":"3rd Year Project Laboratory","CODE":"COMP30900","SEMESTER":"SEM0","CREDITS":"20","PREREQ1":"None","COREQ1":"None","WEBSITE":"http:\/\/intranet.cs.man.ac.uk\/Study_subweb\/Ugrad\/year3\/COMP30900\/","AIMS":"The aims for the project work done in the third year are:\r\n\r\n*To manage and execute a substantial project in a limited time.\r\n\r\n*To identify and learn whatever new skills are needed to complete the project.\r\n\r\n*To apply design and engineering skills in the accomplishment of a single task. In this context the skills mentioned may be in the general area of design and engineering in its broadest sense, or may be very specifically related to particular tools."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"20","TITLE":"Knowledge Representation","CODE":"COMP30411","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10020","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~seanb\/teaching\/COMP30411\/","AIMS":"The course will provide students with an understanding of logic and logic-based knowledge representation formalisms, their theoretical and practical aspects, some relevant reasoning services, and how these are used to support modelling. It will also discuss various issues in knowledge acquisition and engineering with an emphasis on realistic applications."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"20","TITLE":"Natural Language Engineering","CODE":"COMP30421","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"none","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~mary\/CS3421.html","AIMS":"The course unit aims to teach the principles and practice of natural language engineering:\r\n\r\n*To demonstrate how the essential components of NLE systems are built and modified.\r\n*To introduce the principal applications of NLE, including machine translation, information retrieval, information extraction, and the semantic web.\r\n*To explain the major challenges in processing large-scale, real-world natural language.\r\n*To align issues involved in NLE with related issues in software engineering and information systems.\r\n*To give students an understanding of what, realistically, NLE can and cannot hope to achieve, why, and why it matters."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"20","TITLE":"Dialogue Systems","CODE":"COMP37412","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":"The aim of the course is to provide students with the knowledge and practical skills required for developing natural language interfaces to a variety of back-end applications. Dialogue systems require a mixture of technologies -- speech recognition and generation, natural language understanding, and inference about the user's beliefs and goals. The course will outline the architecture of a typical dialogue system, explaining the roles of the various components; describe the theoretical basis of each component; and consider the limitations of existing techniques. Students will have an opportunity to experiment with state-of-the-art technology, in order to familiarise themselves with the major techniques and with the problems involved in developing practical systems.\r\n\r\nThis course is complementary to COMP30421: Natural Language Engineering, and has a small degree of overlap with COMP20442: Artificial Intelligence Programming. Neither of these course units is a pre- or co-requisite, and this unit is designed to be taken by students who have not taken either of the others. Student who have taken one (or both) of these will therefore find that some material is repeated."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"20","TITLE":"Robotics","CODE":"COMP30451","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"Either MT1662 or MT1672; some knowledge of C programming, COMP20411","COREQ1":null,"WEBSITE":"http:\/\/www.cs.man.ac.uk\/robotics\/","AIMS":"This course unit introduces students to robotic systems coving multi-link robotic systems, mobile robotic systems, actuators, sensors, biologically inspired robotics and machine learning techniques. The main aim is to give students an introduction to the field, historic background, development and current cutting edge research points, as well as a practical introduction how to move and control robots. The course unit is practical, and students will be given access to robots for exercises."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"1","MAX_CREDITS":"50","MIN_CREDITS":"20","TITLE":"Computer Vision","CODE":"COMP30432","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"MT1662 or MT1672 (recommended but not essential)","COREQ1":"none","WEBSITE":"http:\/\/www.medicine.manchester.ac.uk\/isbe\/courses\/csoption\/","AIMS":"To provide a broad introduction to Computer Vision and Image Interpretation. To introduce the basic concepts and algorithmic tools of Computer Vision To explore the importance of modelling and representation in interpretation of images. To provide an understanding of the range of processing components involved in image interpretation systems."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Digital Media Processing","CODE":"COMP30291","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP10092","COREQ1":"COMP10081","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~barry\/mydocs\/COMP30291\/","AIMS":"This course is concerned with the application of digital signal processing (DSP) to speech, music and video. Students will gain an appreciation of the software, the design tools currently available and some of the most important applications of media processing in general purpose and embedded systems."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Quantum Computing","CODE":"COMP30222","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"Computer Science students: CS1021, MT1662 or MT1672, CS1112, CS1211, COMP20012","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~banach\/CS3222.Info\/","AIMS":"The perspective that quantum phenomena bring to the questions of information and algorithm is quite unlike the conventional one. In particular, selected problems which classically have only slow algorithms, have in the quantum domain, algorithms which are exponentially faster. Most important among these is the factoring of large numbers, whose difficulty underpins the security of the RSA encryption protocol, used for example in the secure socket layer of the internet. If serious quantum computers could ever be built, RSA would become instantly insecure. This course aims to give the student an introduction to this unusual new field."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Understanding Programming Languages","CODE":"COMP30151","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"CS1021","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/Study_subweb\/Ugrad\/courses.php3","AIMS":"Students taking this module should gain a deeper understanding of some of the standard programming language constructs and of the overall structure of a programming language and should develop an appreciation of the role of formal semantics in the design and precise definition of a programming language."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"From Transistors to Systems-on-Chip","CODE":"COMP30202","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP1211","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/Study_subweb\/Ugrad\/courses.php3","AIMS":"CMOS technology underpins the majority of leading edge digital commercial applications regardless of whether the design is aimed at high performance, low power or area efficiency. The aim of this course is to give students a thorough overview of the capabilities of this powerful and flexible technology, illustrating this with the memory, arithmetic, register and bus blocks used in today's processors. This should enable students to design circuits with confidence and to understand low-level and high-level design issues permitting sound design choices to be made."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Compilers","CODE":"COMP30142","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"CS1021","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~rizos\/CS3142\/","AIMS":"Any program written in a programming language must be translated before it can be executed. This translation is typically accomplished by a software system called compiler. This module aims to introduce students to the principles and techniques used to perform this translation and the issues that arise in the construction of a compiler."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"High Performance Microprocessors","CODE":"COMP30002","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP10031","COREQ1":null,"WEBSITE":"http:\/\/www.cs.man.ac.uk\/~watson\/CS3002\/","AIMS":"Modern computer systems are almost exclusively constructed from single-chip microprocessors. As fabrication density and integration levels have increased, microprocessor manufacturers have adopted many of the architectural ideas first devised for traditional high-performance computers. The aim of this course is to provide a thorough understanding of the machine architectural and associated compilation techniques used in current microprocessors and to examine their performance characteristics. Advanced techniques, which may find their way into the next generation of products, are also examined and analysed."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Data Integration and Analysis","CODE":"COMP37332","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20312 or INFO21001","COREQ1":"None","WEBSITE":null,"AIMS":"The aim of the course is to give students an awareness of the problems and opportunities associated with data integration, including the analysis of the data once integrated."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Modern Software Engineering Practice","CODE":"COMP37321","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"INFO12005","COREQ1":null,"WEBSITE":"http:\/\/intranet.cs.man.ac.uk\/Study_subweb\/Ugrad\/year3\/COMP37321\/","AIMS":"This course unit aims to give students an advanced understanding of software engineering issues, focussing particularly on modern SE techniques and notations."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Semantic Web","CODE":"COMP37340","SEMESTER":"BOTH","CREDITS":"20","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":"To give students a detailed understanding of the principles and practices underlying the Semantic Web.\r\n\r\nTo equip students with knowledge engineering skills. \r\n"},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Management Support Systems","CODE":"COMP37310","SEMESTER":"BOTH","CREDITS":"20","PREREQ1":"no","COREQ1":"no","WEBSITE":null,"AIMS":"The main aim of this course unit is to introduce students to the managerial decision-making process and its support by different types of computerised systems, emphasising some of the underlying mathematical theories and methods. The students will also learn how to apply different decision making methods for solving practical managerial problems and how to develop simple managerial decision-support systems by using some programming shells."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Advanced Algorithms","CODE":"COMP30172","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20012","COREQ1":"None","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~david\/algorithms\/course.html","AIMS":"This unit provides an advanced course in algorithms, assuming the student already knows simple algorithms for common computational tasks, and can reason about the correctness of algorithms and derive their complexity.\r\n\r\nThe course unit covers (1) a range of advanced algorithms in areas such as string searching and graph algorithms and their applications, (2) the notion of complexity classes for algorithmic tasks, completeness and hardness, and proofs by reduction, and (3) probabilistic techniques and algorithms.\r\n\r\nThe range of advanced algorithms will illustrate the complexity classes and also the structure, origins and correctness of algorithms."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Applying UML and Patterns","CODE":"COMP30061","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP20341","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/Study_subweb\/Ugrad\/courses.php3","AIMS":"This is not a conventional lecture course. In fact there will probably only be one conventional lecture. Rather than lecture handouts, the primary source of material will be the book \"Applying UML and Patterns\" by Craig Larman, and you will need to buy it. The book is neither cheap nor thin, but it is excellent, and every computer scientist should own a copy. You will be given detailed advice on which parts of the book to focus on, to avoid excessive reading time.\r\n\r\nThis is not just a 'reading course' however. There will be 23 contact sessions, but rather than lectures most of these will be of the following kinds:\r\n\r\n*Q&A: Question and answer sessions, where you can ask questions about the course material and have them answered.\r\n*Test: Sessions which include a half hour online test which counts for 10% of the total assessment for the course. There are five of these, each preceded by an optional self-assessment test which can be taken when convenient.\r\n*Review: Feedback on a previous test. A final review session will be held after the notional end of the course to review the mock exam.\r\n\r\nThe continuous assessment and accompanying feedback is made possible by the use of online exam software. See the additional information for more information on this form of assessment. The assessment will be based on a case study - applying UML and patterns to the design of an online exam system! This will run parallel to the case study in the book.\r\n\r\nThe primary aim of the course is stated in the title of the book: applying UML and patterns, as opposed to merely learning UML notation and pattern descriptions. The book contains a vast amount of sound advice on best practice in software development, and the students should internalise a reasonable subset of this."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Digital Wireless Communications and Networks","CODE":"COMP30091","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP20081","COREQ1":"None","WEBSITE":"http:\/\/moodle.cs.man.ac.uk\/course\/view.php?id=54","AIMS":"The core 2nd year networking course has introduced the background that all computer scientists need. That course is almost entirely about wired networks. This course extends the networking to wireless networks which are introduced. The course also covers digital telephone networks. The main goal is for students to understand how today's wireless local area networks (WLANs) operate and to be aware of current developments in this domain. \r\n\r\n<h3>Objectives<\/h3>\r\n\r\nTo develop awareness and experience of:\r\n*The way in which wireless communications has developed since the early 1900's.\r\n*To learn the basics about how radio waves are propagated from a transmitter to a receiver.\r\n*To learn basic information about modulation of different signals onto radio waves.\r\n*To learn about the techniques used to modulate digital data onto radio waves.\r\n*To overview the different types of digital communications in use today.\r\n*To understand how wireless local area networks (WLAN) operate today.\r\n*To gain insight into current developments in WLANs."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Model-Based Software Design","CODE":"COMP30341","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"none","COREQ1":"none","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS3341\/","AIMS":"The aims of this course unit are to show how the use of models can reduce the effort to implement large complex systems, and to show how the use of abstract models can isolate true design information from the details of an implementation, so making it easier to migrate software when the underlyinh target platform changes."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Software Evolution","CODE":"COMP30332","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"CS2341","COREQ1":"none","WEBSITE":"http:\/\/intranet.cs.man.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS3331\/","AIMS":"This module aims to make students aware of the challenges inherent in the maintenance and evolution of software systems, and to provide a working understanding of some of the techniques and best practices currently in use for changing software safely."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Advanced Databases","CODE":"COMP30311","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP20312 or INFO21001","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~norm\/COMP30311\/","AIMS":"The aim of the course is to give students an awareness of programming and modelling issues that are central to advanced database systems."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Advanced Computer Graphics","CODE":"COMP30071","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"COMP20072","COREQ1":"None","WEBSITE":"http:\/\/moodle.cs.man.ac.uk\/course\/view.php?id=31","AIMS":"This Course Unit covers the principles of modern techniques for Computer Graphics modelling and image synthesis, on the assumption that students have already completed the introductory Computer Graphics course (COMP20072). Its principal aim is to introduce students to the ever-expanding repertoire of techniques for defining and rendering images of 3D model data. Particular attention is focussed on the increasing requirements for complex rendering and interaction to occur in real-time."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Optical Computing","CODE":"COMP30251","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"CS1211","COREQ1":"none","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/Study_subweb\/Ugrad\/coursenotes\/CS3251\/","AIMS":"The exploitation of light has revolutionised the way we transmit and store data, can it do the same in the way in which we manipulate data? This course looks at the application of light in areas of computing, communications and optical storage.\r\n\r\nThe telecommunications industry has been transformed through the use of optical fibres, which have enabled millions of telephone calls to be transmitted simultaneously over a single glass fibre, as well as permitting broadband internet connections to our homes. The use of light in optical storage systems has also allowed storage densities to increase from the 650MB of the ubiquitous CD up to 50GB per disc in the new Bluray standard. In addition, optical systems have a potential for parallelism and connectivity far in excess of that offered by computers based on today's electronic technology.\r\n\r\nThus, the aim of this course is to look at the application of optics in these three areas and, in particular, explore architectures, techniques and applications suitable for use in optical computing."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Concurrency","CODE":"COMP30112","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"CS1021","COREQ1":"None","WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/CS3112\/Concurrency-CD\/index.html","AIMS":"This course will provide a systematic treatment of concepts and issues in concurrency. The subject will be introduced via a small process algebra language, FSP, for specifying the concurrent behaviour of finite state processes. The Java language has built-in concurrency constructs and will be used to illustrate implementations of example specifications. Also the FSP language comes with software tools for animation and verification and these will be used in examples.\r\n\r\nA wide variety of common concurrency problems will be investigated. Some of the underlying theory of the process algebra FSP and related algebras such as Milner's CCS and Hoare's CSP will be studied.\r\n\r\nThe course aims to:\r\n*Provide students with an understanding of concurrent systems, in particular how to model them using the process algebra FSP and how to implement them using Java.\r\n*Study techniques for the analysis of concurrent systems.\r\n*Introduce, via a set of case-studies, typical methods for solving concurrency problems.\r\n*Allow students to use a suite of tools for analysing FSP systems."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Theory of Games and Game Models","CODE":"COMP30191","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":"CS1021 (or similar mathematics background)","COREQ1":"none","WEBSITE":"http:\/\/www.cs.man.ac.uk\/~schalk\/3192\/","AIMS":"This module provides a first introduction to the field. The notions of `game' and `strategy' are first put on a solid footing, and then the basics of classic game theory (an area of mathematics) are explored. Following that the notion of a game model is introduced and relevant examples are discussed. These include the Prisoner's Dilemma in a number of variations, computer simulations in situations where a theoretical analysis fails, and the modelling of evolution. For larger games, such as Chess, the methods introduced so far do not work in practice, but there are approaches in computing which allow finding good moves. \r\n\r\nStudents are expected to read the notes; to support them in this there are sessions to ask questions, and in which the lecturer will introduce the material to be read in the coming week."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"2","MAX_CREDITS":"70","MIN_CREDITS":"40","TITLE":"Cryptography and Network Security","CODE":"COMP30082","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":"COMP20081","COREQ1":null,"WEBSITE":"http:\/\/www.cs.manchester.ac.uk\/csonly\/courses\/COMP30082\/","AIMS":"The spectacular growth of the Internet has spawned an increased awareness in security issues. This course unit will cover security threats and vulnerabilities, principles of cryptography, and practical topics in network and Internet security. The course is designed for students who have some understanding of computer networks and protocols, but no background in security. The course aims to teach students principles and practices of cryptography and network security."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"3","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Requirements Engineering","CODE":"BMAN30741","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":null,"COREQ1":null,"WEBSITE":"http:\/\/www.informatics.manchester.ac.uk\/~ilias\/re","AIMS":"The aim of this course unit is to foster an understanding of the importance and role of requirements engineering and of the concepts of the different  techniques involved in this task."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"3","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"IT Architecture","CODE":"BMAN30732","SEMESTER":"SEM2","CREDITS":"15","PREREQ1":"INFO20003 Software Analysis and Design","COREQ1":null,"WEBSITE":null,"AIMS":"Students will learn the concepts, techniques and tools underpinning  the IT architecture discipline and the importance of IT architecture and the role of IT Architects in organisations. Students will also be able to gain practical experience in designing an IT architecture for a business scenario case study. The underpinnings of IT architecture (structures and patterns, sizing, security) will be studied together with the analysis of the limitations of non-architecture driven methods which led to the development of the IT architecture discipline. An understanding of current and likely future developments in service-orineted architectures will also be gained."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"3","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Technological Development in the Network Society","CODE":"BMAN30034","SEMESTER":"BOTH","CREDITS":"20","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":null},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"4","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Computing - History and Culture","CODE":"HSTM20282","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":null,"COREQ1":null,"WEBSITE":"http:\/\/www.intranet.ls.manchester.ac.uk\/undergraduate\/units\/item.asp?id=2089&ayid=7","AIMS":"For details please point to the HSTM20282 website. This will require you to enter your campus username and password."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"4","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Mathematical Economics","CODE":"ECON20120","SEMESTER":"Unknown","CREDITS":"20","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":null},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"4","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Managing Finance in Enterprises for Computer Scientists","CODE":"MSEC31122","SEMESTER":"SEM2","CREDITS":"10","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":"The unit aims to: - Explore the main functions of finance in the successful enterprise - Critically evaluate the health of a business using cash flow, balance sheet and profit and loss information - Understand the role of managing risk, contracts and procurement processes within a business environment - Introduce the use of project management and business planning methods Description This option unit can be studied independently but does complement MSEC31131 Enterprise Management for Computer Scientists. The unit covers the essential financial processes in a company, the use of cash flow, balance sheet and profit and loss statements, the analysis of risk, how goods and services are procured and contracts managed. The unit encourages use of simple project management methods and business plans. The unit is a requirement for those studying an accredited Masters route."},{"PROGRAMME_LEVEL":"3","OPTION_POOL_NAME":"4","MAX_CREDITS":"20","MIN_CREDITS":"0","TITLE":"Enterprise Management for Computer Scientists","CODE":"MSEC31131","SEMESTER":"SEM1","CREDITS":"10","PREREQ1":null,"COREQ1":null,"WEBSITE":null,"AIMS":"The unit aims to: - Explore the role of business enterprises competing in a market - Critically evaluate the issues to be considered in developing and bringing to market a knowledge based idea - Identify the main legal requirements relating to running an enterprise Description This option unit can be studied independently but does complement MSEC31122 Managing Finance in Enterprises for Computer Scientists. The unit covers the essential elements of the market, competition and strategy, leadership, intellectual property and ideas development, sustainability and the legal issues of managing a business enterprise. The unit is a requirement for those studying an accredited Masters route."}]